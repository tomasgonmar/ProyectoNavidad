package vista.frames;

import controlador.ConexionBDD;
import controlador.frames.ControladorLoadingScreen;
import controlador.UtilDiseño;
import javax.swing.JProgressBar;

/**
 * Frame de carga para la aplicación.
 * Esta clase representa la ventana de carga que se muestra al iniciar la aplicación.
 * Permite realizar la conexión a la base de datos y mostrar el progreso de carga.
 * 
 * @author Tomas Gonzalez Martin
 */
public class FrameLoadingScreen extends javax.swing.JFrame {
    /**
     * Referencia a la ventana de inicio de sesión.
     */
    private FrameLogin ventanaLogin;
    
    /**
     * Objeto de conexión a la base de datos.
     */
    private ConexionBDD con;
    
    /**
     * Controlador para la pantalla de carga.
     */
    private static ControladorLoadingScreen CLOG;
    
    /**
     * Crea una nueva instancia de FrameLoadingScreen.
     * Inicializa los componentes y el controlador de la pantalla de carga.
     */
    public FrameLoadingScreen() {
        initComponents();
        CLOG = new ControladorLoadingScreen(this);
        UtilDiseño.redondearVentana(this);
        setIconImage(UtilDiseño.createImageIcon("/img/logo_myapp/Logo_Nav.png", "Logo").getImage());
    }
    
    /**
     * Inicia la aplicación y realiza la conexión a la base de datos.
     * Este método es llamado para comenzar la carga de la aplicación.
     */
    public void inicioAplicacion(){
        CLOG.iniciarAplicacion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(26, 26, 26));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 40)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mi Aplicacion");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 101, 350, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Logo_LoadingScreen.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 31, 200, 200));

        jProgressBar1.setBackground(new java.awt.Color(217, 217, 217));
        jProgressBar1.setForeground(new java.awt.Color(85, 85, 85));
        jProgressBar1.setValue(50);
        jPanel1.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 256, 673, 6));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables

    /**
     * Devuelve la barra de progreso de carga.
     *
     * @return La barra de progreso de carga.
     */
    public JProgressBar getProgresBar() {
        return jProgressBar1;
    }

    /**
     * Establece la conexión a la base de datos.
     *
     * @param con La conexión a la base de datos a establecer.
     */
    public void setConexion(ConexionBDD con) {
        this.con = con;
    }

    /**
     * Obtiene la conexión a la base de datos.
     *
     * @return La conexión a la base de datos.
     */
    public ConexionBDD getConexion() {
        return this.con;
    }

    /**
     * Establece la referencia a la ventana de inicio de sesión.
     *
     * @param frameLogin La ventana de inicio de sesión a establecer.
     */
    public void setVentanaLogin(FrameLogin frameLogin) {
        this.ventanaLogin = frameLogin;
    }

    /**
     * Obtiene la referencia a la ventana de inicio de sesión.
     *
     * @return La ventana de inicio de sesión.
     */
    public FrameLogin getVentanaLogin() {
        return this.ventanaLogin;
    }

}
